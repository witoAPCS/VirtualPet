import processing.serial.*;
import cc.arduino.*;
Arduino arduino;


void setup(){
  size(800,800);
  arduino = new Arduino(this, Arduino.list()[1], 57600); //change the [0] to a [1] or [2] etc. if your program doesn't work

}

void draw(){
  background(192);
  int y = arduino.analogRead(5);
  System.out.println(y);
  fill(255,255,0);
  ellipse(40, 2*y, 50, 50);
  
  //One of the legs in the back
  noStroke();
  //fill(color(194, 153, 66));
  //rect(430,550,80,100);
    
  //body
  rotate(radians(-5));
  fill(color(212, 168, 72));
  //arc(400,500,500,220,PI,PI+PI);
  //arc(400,500,500,210,0,PI);
  
  //head 
  //fill(color(168, 131, 50));
  noStroke();
  rotate(radians(-18));
  arc(30,600,350,160,PI,PI+PI/2);
  arc(30,600,350,15,PI/2,PI);
  
  //one of the front legs 
  rotate(radians(23));
  rotate(radians(4));
  rotate(radians(-4));
  right();
  //rect(360,490,80,100);
  
  left();
  rotate(radians(-30));
  //rect(220,750,80,90);
  rotate(radians(30));
  

  
  //hexagon gaming 
  stroke(0);
  strokeWeight(2);
  
  fill(color(194, 153, 66));

  
  //back leg 
  
  drawHexagon(506,584,491,607,482,643,508,648,508,608,508,608);
  drawHexagon(470,616,462,641,462,648,488,648,492,631,493,612);
  drawHexagon(441,631,430,641,418,648,432,649,464,649,467,621);
  drawHexagon(459,591,447,610,453,628,467,624,482,612,474,599);
  drawHexagon(459,597,442,610,432,634,451,641,483,637,486,614);
  drawHexagon(433,597,429,617,436,624,452,624,465,614,459,594);
  drawHexagon(490,578,464,591,468,614,496,626,508,611,508,611);
  drawHexagon(434,578,429,601,444,609,476,604,484,592,482,571);
  drawHexagon(433,562,430,579,441,595,458,595,472,587,474,565);
  drawHexagon(429,551,432,570,448,578,467,578,476,569,484,551);
  drawHexagon(477,550,464,568,471,584,491,592,509,596,509,542);
  //head and body
  drawHexagon(659,546,678,574,625,599,637,580,643,561,643,552);
  drawHexagon(640,554,617,579,617,594,642,592,659,584,654,560);
  drawHexagon(637,521,647,526,660,547,658,567,628,561,623,538);
  drawHexagon(600,590,597,601,594,617,594,624,621,606,636,598);
  drawHexagon(600,590,597,601,594,617,594,624,621,606,636,598);
  drawHexagon(588,559,585,573,597,593,616,598,631,588,632,578);
  drawHexagon(581,544,580,562,608,580,621,578,628,568,618,540);
  drawHexagon(618,523,587,543,615,581,634,574,654,562,653,538);
  drawHexagon(643,483,632,515,650,503,669,480,655,481,655,481);
  drawHexagon(594,525,609,499,636,497,642,514,642,542,642,548);
  drawHexagon(563,543,576,553,596,555,613,543,604,522,573,512);
  drawHexagon(557,530,570,539,589,533,606,500,607,500,607,500);
  drawHexagon(534,529,523,541,527,554,565,543,561,525,543,526);
  drawHexagon(682,459,675,483,661,493,647,498,636,493,636,449);
  drawHexagon(659,406,656,393,666,396,675,406,678,417,676,432);
  drawHexagon(677,409,664,423,669,455,681,471,691,453,688,426);
  drawHexagon(633,383,660,395,677,420,677,445,641,473,628,405);
  drawHexagon(614,387,626,378,651,397,660,414,661,439,636,466);
  drawHexagon(601,439,646,446,647,466,649,483,640,503,602,501);
  drawHexagon(593,377,621,380,634,396,644,426,638,455,601,458);
  drawHexagon(587,482,601,472,636,495,627,509,565,528,526,521);
  drawHexagon(576,431,603,436,621,471,614,489,588,506,567,477);
  drawHexagon(582,380,627,425,613,453,579,448,560,419,492,401);
  drawHexagon(522,367,539,356,566,361,611,377,582,416,548,421);
  drawHexagon(507,515,577,507,557,534,543,538,521,542,495,516);
  drawHexagon(539,454,578,450,597,468,598,520,564,534,546,515);
  drawHexagon(524,399,595,405,600,434,585,460,543,486,492,457);
  drawHexagon(492,354,525,353,559,396,557,431,545,459,538,458);
  drawHexagon(517,432,563,447,565,509,542,542,514,532,483,484);
  drawHexagon(494,373,537,386,542,418,538,450,511,486,472,445);
  drawHexagon(458,356,480,347,507,359,510,384,489,421,471,423);
  drawHexagon(434,539,427,564,494,560,538,545,509,521,459,510);
  drawHexagon(486,449,493,440,525,484,525,525,513,547,475,539);
  drawHexagon(465,515,497,524,501,540,500,549,463,551,427,548);
  drawHexagon(445,472,476,476,496,499,488,534,448,549,418,508);
  drawHexagon(464,388,497,409,507,464,477,490,450,485,434,451);
  drawHexagon(416,372,443,352,472,355,489,372,472,406,437,422);
  drawHexagon(406,451,438,429,451,438,467,468,457,493,426,509);
  drawHexagon(404,371,443,398,447,424,440,450,411,455,356,435);
  drawHexagon(349,368,395,361,434,356,446,365,446,385,382,415);
  drawHexagon(379,404,419,420,428,445,413,482,384,481,338,446);
  drawHexagon(381,471,420,477,443,503,436,540,388,547,373,524);
  drawHexagon(386,542,381,567,427,564,473,554,442,531,385,530);
  drawHexagon(323,382,351,367,381,378,395,404,378,444,329,432);
  drawHexagon(365,529,332,573,346,563,380,567,424,550,370,528);
  drawHexagon(345,497,381,490,403,497,404,529,377,553,341,542);
  drawHexagon(339,488,303,473,303,431,336,410,377,441,359,484);
  drawHexagon(353,423,380,425,401,450,399,475,386,514,342,505);
  drawHexagon(294,396,324,376,349,382,370,402,362,432,322,452);
  //leg 1
  drawHexagon(257,409,283,389,307,417,346,448,325,491,285,475);
  drawHexagon(226,554,230,564,253,552,253,531,237,535,225,553);
  drawHexagon(170,558,200,549,224,553,231,564,180,581,168,571);
  drawHexagon(207,572,171,586,129,581,150,550,168,550,170,556);
  drawHexagon(168,557,206,546,196,529,206,508,192,503,170,524);
  drawHexagon(150,550,170,552,170,523,188,504,188,488,147,517);
  drawHexagon(146,514,117,548,118,559,131,577,146,559,150,546);
  drawHexagon(115,548,99,584,102,608,134,599,170,585,131,573);
  drawHexagon(199,484,217,457,255,474,274,498,269,527,255,548);
  drawHexagon(253,551,253,545,269,531,279,566,266,567,268,550);
  drawHexagon(206,489,234,467,254,476,282,495,276,531,256,548);
  drawHexagon(261,493,291,491,320,510,318,553,280,572,268,538);
  drawHexagon(192,481,212,436,256,438,278,468,272,505,253,527);  
  drawHexagon(204,510,213,491,252,521,254,530,236,534,225,518);
  drawHexagon(207,445,198,452,193,474,231,490,249,473,238,451);
  drawHexagon(212,435,230,404,259,397,280,404,292,439,270,470);
  drawHexagon(287,436,267,467,266,499,277,512,310,517,325,472);
  drawHexagon(265,565,263,585,273,596,289,583,289,564,277,549);
  drawHexagon(263,404,298,385,328,399,337,432,311,459,267,454);
  drawHexagon(318,549,284,565,272,592,288,599,312,584,318,551);
  drawHexagon(261,591,262,585,258,609,277,621,302,611,313,582);
  drawHexagon(263,584,259,598,282,603,303,577,304,544,272,568);
  drawHexagon(300,609,300,596,318,592,337,611,331,628,316,629);
  drawHexagon(293,623,276,645,315,654,323,635,319,611,300,617);
  drawHexagon(327,585,305,564,308,521,361,514,373,543,345,563);
  //leg 2
  drawHexagon(295,615,272,634,276,641,298,649,314,639,310,607);
  drawHexagon(257,622,245,643,262,644,279,647,298,629,277,621);
  drawHexagon(259,603,277,615,303,605,301,633,271,638,254,627);
  drawHexagon(281,646,313,634,330,615,335,624,330,655,310,652);
  drawHexagon(305,581,333,561,344,582,331,623,322,610,307,601);
  drawHexagon(306,522,298,475,317,470,351,500,336,528,316,536);
  
  drawHexagon(313,508,323,464,363,474,374,495,360,530,318,538);
  
  //face
  fill(color(0,0,0));
  ellipse(160,540,30,30);


  
}

void left(){
  rotate(radians(-10));
}

void right(){
  rotate(radians(10)); 
}

void mouseClicked(){
  System.out.print(mouseX);
  System.out.print(",");
  System.out.print(mouseY);   
  System.out.print(",");
}

void drawHexagon(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4, int x5, int y5, int x6, int y6){
  int yLocal = arduino.analogRead(5);
  int yProcessed = 500 - yLocal; 
  if(yProcessed > 400){
  cR(0,0,0);
  }else if(yProcessed > 350){
  cR(30,30,30);
  }
  else if(yProcessed > 300){
  cR(50,50,50);
  }
  beginShape();
  vertex(192,483);
  vertex(186,500);
  vertex(189,510);
  vertex(199,510);
  //bottom vertex
  vertex(206,511);
  vertex(213,502);
  vertex(207,490);
  vertex(192,483);
  endShape();
  
  beginShape();
  vertex(206,511);
  vertex(191,531);
  vertex(203,552);
  //bottom vertex
  vertex(225,556);
  vertex(236,535);
  vertex(227,516);
  vertex(206,511);
  endShape();
  
  beginShape();
  vertex(x1,y1);
  vertex(x2,y2);
  vertex(x3,y3);
  vertex(x4,y4);
  vertex(x5,y5);
  vertex(x6,y6);
  //fail safe
  vertex(x1,y1);
  endShape();
}

  

void cR(int a,int b,int c){   
    fill(color(194 + random(1,66) -a, 153 + random(1,102)-b, 66 + random(1,189)-c));
}
